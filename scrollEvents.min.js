if(scrollEvents){throw new Error("You already have a global variable named scrollEvents, please rename scrollEvents.")}else{var scrollEvents=function scrollEvents(win,doc){var each=scrollEvents.call.bind([].forEach),qsa=function(selector){return doc.querySelectorAll(selector)},addScrollListener=function(selectors,fn,initialValue,changedValue,breakPoint){win.addEventListener("scroll",function(){var value=win.pageYOffset>breakPoint?changedValue:initialValue;each(qsa(selectors),function apply(el){fn(el,value)})})};return{breakPoint:10,changeClass:function(selectors,initialValue,changedValue,breakPoint){if(arguments.length<3){throw new Error("You have not supplied all parameters to scrollEvents.changeClass, this may cause weird or unexpected behavior. The parameters are: selectors, initialValue, changedValue, breakPoint. Note that breakPoint is optional and the default is 10.")}addScrollListener(selectors,function changeClass(el,value){var classes=el.classList,initial=initialValue===value;classes.toggle(initialValue,initial);classes.toggle(changedValue,!initial)},initialValue,changedValue,breakPoint||this.breakPoint)},changeStyle:function(selectors,property,initialValue,changedValue,breakPoint){if(arguments.length<4){throw new Error("You have not supplied all parameters to scrollEvents.changeStyle, this may cause weird or unexpected behavior. The parameters are: selectors, property, initialValue, changedValue, breakPoint. Note that breakPoint is optional and the default is 10.")}addScrollListener(selectors,function changeStyleProperty(el,value){el.style[property]=value},initialValue,changedValue,breakPoint||this.breakPoint)},changeText:function(selectors,initialValue,changedValue,breakPoint){if(arguments.length<3){throw new Error("You have not supplied all parameters to scrollEvents.changeText, this may cause weird or unexpected behavior. The parameters are: selectors, initialValue, changedValue, breakPoint. Note that breakPoint is optional and the default is 10.")}addScrollListener(selectors,function changeTextContent(el,value){el.textContent=value},initialValue,changedValue,breakPoint||this.breakPoint)}}}(window,document)}
